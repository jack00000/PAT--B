/*要获得一个C语言程序的运行时间，常用的方法是调用头文件time.h，其中提供了clock()函数，
可以捕捉从程序开始运行到clock()被调用时所耗费的时间。这个时间单位是clock tick，即“时钟打点”。
同时还有一个常数CLK_TCK，给出了机器时钟每秒所走的时钟打点数。于是为了获得一个函数f的运行时间，
我们只要在调用f之前先调用clock()，获得一个时钟打点数C1；在f执行完成后再调用clock()，
获得另一个时钟打点数C2；两次获得的时钟打点数之差(C2-C1)就是f运行所消耗的时钟打点数，
再除以常数CLK_TCK，就得到了以秒为单位的运行时间。
这里不妨简单假设常数CLK_TCK为100。现给定被测函数前后两次获得的时钟打点数，请你给出被测函数运行的时间。
输入格式：
输入在一行中顺序给出2个整数C1和C1。注意两次获得的时钟打点数肯定不相同，即C1 < C2，并且取值在[0, 10^7]。
输出格式：
在一行中输出被测函数运行的时间。运行时间必须按照“hh:mm:ss”（即2位的“时:分:秒”）格式输出；不足1秒的时间四舍五入到秒。
输入样例：
123 4577973
输出样例：
12:42:59
分析

这是第一道题，难度不大，重点就是四舍五入，我这里的做法应为要除以常数CLK_TCK=100，
所以我直接在原来的基础上加了50，就可以四舍五入了。

源代码*/ 

//C/C++实现
#include <iostream>

using namespace std;

int main(){
    int c1, c2;
    scanf("%d %d", &c1, &c2);
    float d = c2 - c1 + 50; //+50是四舍五入
    int hour = d / 360000;
    d -= hour * 360000;
    int minute = d / 6000;
    d -= minute * 6000;
    int second = d / 100;
    printf("%02d:%02d:%02d\n", hour, minute, second);
    return 0;
}
